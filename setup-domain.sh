#!/bin/bash

# üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–º–µ–Ω–∞ –¥–ª—è Telegram Mini App

echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–º–µ–Ω–∞ –¥–ª—è Telegram Mini App"
echo "========================================"
echo ""
echo "üìã –ü–õ–ê–ù –î–ï–ô–°–¢–í–ò–ô:"
echo ""
echo "1Ô∏è‚É£  –ü–û–õ–£–ß–ò–¢–¨ –ë–ï–°–ü–õ–ê–¢–ù–´–ô –î–û–ú–ï–ù:"
echo "   ‚Ä¢ Freenom.com (–±–µ—Å–ø–ª–∞—Ç–Ω–æ .tk, .ml, .ga)"
echo "   ‚Ä¢ –ò–ª–∏ –∫—É–ø–∏—Ç—å –¥–æ–º–µ–Ω ($1-2/–≥–æ–¥)"
echo ""
echo "2Ô∏è‚É£  –ù–ê–°–¢–†–û–ò–¢–¨ CLOUDFLARE:"
echo "   ‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –¥–æ–º–µ–Ω –≤ Cloudflare"
echo "   ‚Ä¢ –ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π SSL"
echo "   ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å DNS –Ω–∞ IP: 89.104.65.237"
echo ""
echo "3Ô∏è‚É£  –û–ë–ù–û–í–ò–¢–¨ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Æ –ë–û–¢–ê:"
echo "   ‚Ä¢ –ò–∑–º–µ–Ω–∏—Ç—å NEXT_PUBLIC_APP_URL"
echo "   ‚Ä¢ –û–±–Ω–æ–≤–∏—Ç—å webhook URL"
echo "   ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Mini App URL –≤ BotFather"
echo ""

read -p "ü§î –•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —è —Å–æ–∑–¥–∞–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏? (y/n): " answer

if [[ $answer == "y" || $answer == "Y" ]]; then
    echo ""
    echo "üìù –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
    read -p "üåê –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: mybot.tk): " DOMAIN
    
    if [[ -z "$DOMAIN" ]]; then
        echo "‚ùå –î–æ–º–µ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω!"
        exit 1
    fi
    
    echo ""
    echo "üîß –°–æ–∑–¥–∞—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –¥–æ–º–µ–Ω–∞: $DOMAIN"
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π .env —Ñ–∞–π–ª —Å –¥–æ–º–µ–Ω–æ–º
    cat > .env.domain << EOF
# üåê –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å –¥–æ–º–µ–Ω–æ–º
NODE_ENV=production
DATABASE_URL=postgresql://tlbot:StrongDbPassword2025@tlbot_postgres:5432/tlbot_prod
TELEGRAM_BOT_TOKEN=7482550053:AAEd0XzEb3tkL1pryqkMYXn1YhoqJaMD7N0
NEXT_PUBLIC_APP_URL=https://$DOMAIN
ADMIN_EMAIL=admin@tlbot.local
ADMIN_PASSWORD=AdminTLBot2025!
WEBHOOK_URL=https://$DOMAIN/api/bot
EOF

    # –°–æ–∑–¥–∞–µ–º nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –¥–æ–º–µ–Ω–∞
    cat > nginx-domain.conf << EOF
server {
    listen 80;
    server_name $DOMAIN;
    
    # Redirect HTTP to HTTPS
    return 301 https://\$server_name\$request_uri;
}

server {
    listen 443 ssl http2;
    server_name $DOMAIN;
    
    # SSL certificates (will be set up by Cloudflare)
    ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.pem;
    ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
    
    # Proxy to Next.js app
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
    }
}
EOF

    # –°–æ–∑–¥–∞–µ–º docker-compose —Å –¥–æ–º–µ–Ω–æ–º
    cat > docker-compose.domain.yml << EOF
version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: tlbot_postgres
    environment:
      POSTGRES_DB: tlbot_prod
      POSTGRES_USER: tlbot
      POSTGRES_PASSWORD: StrongDbPassword2025
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 200M

  app:
    build:
      context: .
      dockerfile: Dockerfile.simple
    container_name: tlbot_app
    environment:
      NODE_ENV: production
      NODE_OPTIONS: "--max-old-space-size=200"
      DATABASE_URL: postgresql://tlbot:StrongDbPassword2025@postgres:5432/tlbot_prod
      TELEGRAM_BOT_TOKEN: 7482550053:AAEd0XzEb3tkL1pryqkMYXn1YhoqJaMD7N0
      NEXT_PUBLIC_APP_URL: https://$DOMAIN
      ADMIN_EMAIL: admin@tlbot.local
      ADMIN_PASSWORD: AdminTLBot2025!
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 300M

volumes:
  postgres_data:
EOF

    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è —Å –¥–æ–º–µ–Ω–æ–º
    cat > deploy-with-domain.sh << 'EOF'
#!/bin/bash

DOMAIN_NAME="$1"
SERVER_IP="89.104.65.237"
SERVER_PASS="Pji3PYKLpeOFgUoF"

if [[ -z "$DOMAIN_NAME" ]]; then
    echo "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy-with-domain.sh yourdomain.tk"
    exit 1
fi

echo "üöÄ –î–µ–ø–ª–æ–π —Å –¥–æ–º–µ–Ω–æ–º: $DOMAIN_NAME"
echo "====================================="

# –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
sshpass -p "$SERVER_PASS" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "
cd /home/tlbot/app

# –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
cat > .env << 'ENVEOF'
NODE_ENV=production
DATABASE_URL=postgresql://tlbot:StrongDbPassword2025@tlbot_postgres:5432/tlbot_prod
TELEGRAM_BOT_TOKEN=7482550053:AAEd0XzEb3tkL1pryqkMYXn1YhoqJaMD7N0
NEXT_PUBLIC_APP_URL=https://$DOMAIN_NAME
ADMIN_EMAIL=admin@tlbot.local
ADMIN_PASSWORD=AdminTLBot2025!
WEBHOOK_URL=https://$DOMAIN_NAME/api/bot
ENVEOF

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
docker-compose down
docker-compose up --build -d

echo '‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!'
echo ''
echo 'üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:'
echo '1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DNS: $DOMAIN_NAME -> $SERVER_IP'
echo '2. –í–∫–ª—é—á–∏—Ç–µ Cloudflare Proxy (–æ—Ä–∞–Ω–∂–µ–≤–æ–µ –æ–±–ª–∞–∫–æ)'
echo '3. –í BotFather —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Mini App URL: https://$DOMAIN_NAME'
echo '4. –û–±–Ω–æ–≤–∏—Ç–µ webhook: https://$DOMAIN_NAME/api/bot'
"
EOF

    chmod +x deploy-with-domain.sh
    
    echo ""
    echo "‚úÖ –§–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã:"
    echo "   üìÑ .env.domain - –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    echo "   üìÑ nginx-domain.conf - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è nginx"
    echo "   üìÑ docker-compose.domain.yml - docker compose —Å –¥–æ–º–µ–Ω–æ–º"
    echo "   üìÑ deploy-with-domain.sh - —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è"
    echo ""
    echo "üéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
    echo ""
    echo "1Ô∏è‚É£  –ü–û–õ–£–ß–ò–¢–ï –î–û–ú–ï–ù:"
    echo "   ‚Ä¢ Freenom.com - –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –¥–æ–º–µ–Ω—ã .tk, .ml, .ga"
    echo "   ‚Ä¢ –ò–ª–∏ –∫—É–ø–∏—Ç–µ –Ω–∞ Namecheap/GoDaddy ($1-2/–≥–æ–¥)"
    echo ""
    echo "2Ô∏è‚É£  –ù–ê–°–¢–†–û–ô–¢–ï CLOUDFLARE:"
    echo "   ‚Ä¢ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ cloudflare.com"
    echo "   ‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à –¥–æ–º–µ–Ω: $DOMAIN"
    echo "   ‚Ä¢ –ò–∑–º–µ–Ω–∏—Ç–µ nameservers —É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–∞ Cloudflare"
    echo "   ‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ A-–∑–∞–ø–∏—Å—å: $DOMAIN -> 89.104.65.237"
    echo "   ‚Ä¢ –í–∫–ª—é—á–∏—Ç–µ 'Proxied' (–æ—Ä–∞–Ω–∂–µ–≤–æ–µ –æ–±–ª–∞–∫–æ)"
    echo "   ‚Ä¢ SSL/TLS -> Full (strict)"
    echo ""
    echo "3Ô∏è‚É£  –î–ï–ü–õ–û–ô:"
    echo "   ./deploy-with-domain.sh $DOMAIN"
    echo ""
    echo "4Ô∏è‚É£  –ù–ê–°–¢–†–û–ô–¢–ï –ë–û–¢–ê:"
    echo "   ‚Ä¢ BotFather -> /setmenubutton -> https://$DOMAIN"
    echo "   ‚Ä¢ BotFather -> /setdomain -> https://$DOMAIN"
    echo ""
    
else
    echo ""
    echo "üìñ –ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø –†–£–ß–ù–û–ô –ù–ê–°–¢–†–û–ô–ö–ò:"
    echo ""
    echo "1Ô∏è‚É£  –ü–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ–º–µ–Ω –Ω–∞ freenom.com"
    echo "2Ô∏è‚É£  –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ cloudflare.com"
    echo "3Ô∏è‚É£  –î–æ–±–∞–≤—å—Ç–µ –¥–æ–º–µ–Ω –≤ Cloudflare"
    echo "4Ô∏è‚É£  –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DNS: A-–∑–∞–ø–∏—Å—å –¥–æ–º–µ–Ω -> 89.104.65.237"
    echo "5Ô∏è‚É£  –í–∫–ª—é—á–∏—Ç–µ Cloudflare Proxy (SSL)"
    echo "6Ô∏è‚É£  –û–±–Ω–æ–≤–∏—Ç–µ NEXT_PUBLIC_APP_URL –≤ .env"
    echo "7Ô∏è‚É£  –í BotFather —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Mini App URL"
    echo ""
fi

echo ""
echo "üí° –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ê - Ngrok (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è):"
echo "   ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ngrok"
echo "   ‚Ä¢ ngrok http 3000"
echo "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ https://xxxxx.ngrok.io –¥–ª—è —Ç–µ—Å—Ç–æ–≤"
echo ""
