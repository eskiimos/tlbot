import { Telegraf } from 'telegraf';
import { prisma } from './lib/prisma';

// –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø ===');
console.log('NODE_ENV:', process.env.NODE_ENV);
console.log('–í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ TELEGRAM:', 
  Object.keys(process.env).filter(key => key.includes('TELEGRAM')).map(key => `${key}=${process.env[key]?.substring(0, 20)}...`)
);
console.log('–í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:', Object.keys(process.env).slice(0, 10));
console.log('=======================================');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
const botToken = process.env.TELEGRAM_BOT_TOKEN;
if (!botToken) {
  console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!');
  console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
  Object.keys(process.env).forEach(key => {
    if (key.includes('BOT') || key.includes('TELEGRAM') || key.includes('TOKEN')) {
      console.log(`  ${key}=${process.env[key]?.substring(0, 30)}...`);
    }
  });
  process.exit(1);
}

console.log('‚úÖ TELEGRAM_BOT_TOKEN –Ω–∞–π–¥–µ–Ω, –¥–ª–∏–Ω–∞:', botToken.length);

const bot = new Telegraf(botToken);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function upsertUser(ctx: any) {
  const user = ctx.from;
  if (!user) return null;

  try {
    const dbUser = await prisma.user.upsert({
      where: { telegramId: BigInt(user.id) },
      update: {
        username: user.username,
        firstName: user.first_name,
        lastName: user.last_name,
        language: user.language_code || 'ru',
        isPremium: user.is_premium || false,
        updatedAt: new Date()
      },
      create: {
        telegramId: BigInt(user.id),
        username: user.username,
        firstName: user.first_name,
        lastName: user.last_name,
        language: user.language_code || 'ru',
        isPremium: user.is_premium || false,
        isBot: user.is_bot || false
      }
    });

    return dbUser;
  } catch (error) {
    console.error('Error upserting user:', error);
    return null;
  }
}

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start(async (ctx) => {
  const user = await upsertUser(ctx);
  const firstName = user?.firstName || ctx.from?.first_name || '–¥—Ä—É–≥';
  const webAppUrl = process.env.NEXT_PUBLIC_APP_URL || 'https://tlbot-2sl9hgbyw-eskimos-projects.vercel.app';
  
  const message = await ctx.reply(
    `–ü—Ä–∏–≤–µ—Ç, ${firstName}! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Total Lookas!\n\n` +
    `üé® –ú—ã ‚Äî –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞, —Å 2017 –≥–æ–¥–∞ –ø—Ä–µ–≤—Ä–∞—â–∞—é—â–µ–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ä—á –≤ –∞—Ä—Ç-–æ–±—ä–µ–∫—Ç—ã! ` +
    `–û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–µ—Ä–∑–∫–∏–π —Å—Ç–∏–ª—å —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º —Å–µ—Ä–≤–∏—Å–æ–º –∏ –º–æ–∂–µ–º –≤—Å—ë ‚Äî –±—ã—Å—Ç—Ä–æ, —Å–º–µ–ª–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ.\n\n` +
    `‚ö°Ô∏è –û—Ç –∏–¥–µ–∏ –¥–æ –≥–æ—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤—Å–µ–≥–æ –∑–∞ 30 –¥–Ω–µ–π!\n` +
    `üéØ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: –¥–∏–∑–∞–π–Ω ‚Üí –ª–µ–∫–∞–ª–∞ ‚Üí –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ ‚Üí –ª–æ–≥–∏—Å—Ç–∏–∫–∞\n` +
    `üëï –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç: –æ—Ç —Ñ—É—Ç–±–æ–ª–æ–∫ –∏ —Ö—É–¥–∏ –¥–æ —é–≤–µ–ª–∏—Ä–Ω—ã—Ö –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤\n\n` +
    `–ì–æ—Ç–æ–≤ "–ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–¥–µ—Ç—å" —Å–≤–æ–π –±—Ä–µ–Ω–¥? –í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç! üöÄ`,
    {
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üî• –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥', web_app: { url: webAppUrl } }],
          [{ text: 'üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏', callback_data: 'contact' }],
          [{ text: '‚ÑπÔ∏è –û –∫–æ–º–ø–∞–Ω–∏–∏', callback_data: 'about' }]
        ]
      }
    }
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ inline –∫–Ω–æ–ø–æ–∫
bot.action('contact', async (ctx) => {
  await ctx.answerCbQuery();
  
  try {
    await ctx.deleteMessage();
  } catch (error) {
    console.log('Cannot delete message:', error);
  }
  
  await ctx.reply(
    `üìû **–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏**\n\n` +
    `üí¨ **Telegram:** @totallookas\n` +
    `üì± **WhatsApp:** +7 (999) 123-45-67\n` +
    `üìß **Email:** hello@totallookas.com\n` +
    `üåê **–°–∞–π—Ç:** www.totallookas.com\n\n` +
    `üìç **–û—Ñ–∏—Å:** –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ö—Ä–µ–∞—Ç–∏–≤–Ω–∞—è, 15\n\n` +
    `‚è∞ **–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:**\n` +
    `–ü–Ω-–ü—Ç: 10:00 - 19:00\n` +
    `–°–±-–í—Å: 11:00 - 17:00\n\n` +
    `üöÄ –ì–æ—Ç–æ–≤—ã –æ–±—Å—É–¥–∏—Ç—å –≤–∞—à –ø—Ä–æ–µ–∫—Ç –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!`,
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: '‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'back_to_main' }]
        ]
      }
    }
  );
});

bot.action('about', async (ctx) => {
  await ctx.answerCbQuery();
  
  try {
    await ctx.deleteMessage();
  } catch (error) {
    console.log('Cannot delete message:', error);
  }
  
  await ctx.reply(
    `‚ÑπÔ∏è **–û –∫–æ–º–ø–∞–Ω–∏–∏ Total Lookas**\n\n` +
    `üé® **–ö—Ç–æ –º—ã?**\n` +
    `–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞, –∫–æ—Ç–æ—Ä–æ–µ —Å 2017 –≥–æ–¥–∞ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ä—á –≤ –Ω–∞—Å—Ç–æ—è—â–∏–µ –∞—Ä—Ç-–æ–±—ä–µ–∫—Ç—ã!\n\n` +
    `üí™ **–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**\n` +
    `‚Ä¢ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –ø–æ–¥ –∫–ª—é—á\n` +
    `‚Ä¢ –°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –¥–∏–∑–∞–π–Ω-—Å—Ç—É–¥–∏—è\n` +
    `‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ\n` +
    `‚Ä¢ –ë—ã—Å—Ç—Ä—ã–µ —Å—Ä–æ–∫–∏: –æ—Ç –∏–¥–µ–∏ –¥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –∑–∞ 30 –¥–Ω–µ–π\n` +
    `‚Ä¢ –†–∞–±–æ—Ç–∞–µ–º —Å –±—Ä–µ–Ω–¥–∞–º–∏ –ª—é–±–æ–≥–æ –º–∞—Å—à—Ç–∞–±–∞\n\n` +
    `üèÜ **–ù–∞—à–∞ –º–∏—Å—Å–∏—è:**\n` +
    `–û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–µ—Ä–∑–∫–∏–π —Å—Ç–∏–ª—å —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º —Å–µ—Ä–≤–∏—Å–æ–º. –î–µ–ª–∞–µ–º –º–µ—Ä—á, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—Ç—Å—è –Ω–æ—Å–∏—Ç—å!\n\n` +
    `üìà **–¶–∏—Ñ—Ä—ã:**\n` +
    `‚Ä¢ –ë–æ–ª–µ–µ 500 –¥–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤\n` +
    `‚Ä¢ –°–≤—ã—à–µ 10,000 –µ–¥–∏–Ω–∏—Ü –ø—Ä–æ–¥—É–∫—Ü–∏–∏\n` +
    `‚Ä¢ 8 –ª–µ—Ç —É—Å–ø–µ—à–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω–∞ —Ä—ã–Ω–∫–µ`,
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏', callback_data: 'contact' }],
          [{ text: '‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'back_to_main' }]
        ]
      }
    }
  );
});

bot.action('back_to_main', async (ctx) => {
  await ctx.answerCbQuery();
  const firstName = ctx.from?.first_name || '–¥—Ä—É–≥';
  const webAppUrl = process.env.NEXT_PUBLIC_APP_URL || 'https://tlbot-2sl9hgbyw-eskimos-projects.vercel.app';
  
  try {
    await ctx.deleteMessage();
  } catch (error) {
    console.log('Cannot delete message:', error);
  }
  
  await ctx.reply(
    `üëã **–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é Total Lookas**\n\n` +
    `üé® –ú—ã ‚Äî –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞, —Å 2017 –≥–æ–¥–∞ –ø—Ä–µ–≤—Ä–∞—â–∞—é—â–µ–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ä—á –≤ –∞—Ä—Ç-–æ–±—ä–µ–∫—Ç—ã! ` +
    `–û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–µ—Ä–∑–∫–∏–π —Å—Ç–∏–ª—å —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º —Å–µ—Ä–≤–∏—Å–æ–º –∏ –º–æ–∂–µ–º –≤—Å—ë ‚Äî –±—ã—Å—Ç—Ä–æ, —Å–º–µ–ª–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ.\n\n` +
    `‚ö°Ô∏è –û—Ç –∏–¥–µ–∏ –¥–æ –≥–æ—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤—Å–µ–≥–æ –∑–∞ 30 –¥–Ω–µ–π!\n` +
    `üéØ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: –¥–∏–∑–∞–π–Ω ‚Üí –ª–µ–∫–∞–ª–∞ ‚Üí –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ ‚Üí –ª–æ–≥–∏—Å—Ç–∏–∫–∞\n` +
    `üëï –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç: –æ—Ç —Ñ—É—Ç–±–æ–ª–æ–∫ –∏ —Ö—É–¥–∏ –¥–æ —é–≤–µ–ª–∏—Ä–Ω—ã—Ö –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤\n\n` +
    `–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, ${firstName}? üöÄ`,
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üî• –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥', web_app: { url: webAppUrl } }],
          [{ text: 'üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏', callback_data: 'contact' }],
          [{ text: '‚ÑπÔ∏è –û –∫–æ–º–ø–∞–Ω–∏–∏', callback_data: 'about' }]
        ]
      }
    }
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
bot.on('web_app_data', async (ctx) => {
  const user = await upsertUser(ctx);
  
  try {
    const webAppData = ctx.message?.web_app_data?.data;
    if (!webAppData) {
      console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
      return;
    }

    const data = JSON.parse(webAppData);
    console.log('–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', data);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É
    await prisma.webAppData.create({
      data: {
        userId: user?.id?.toString() || 'unknown',
        data: data
      }
    });

    // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await prisma.message.create({
      data: {
        userId: user?.id?.toString() || 'unknown',
        content: `–î–∞–Ω–Ω—ã–µ –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ${JSON.stringify(data)}`,
        type: 'WEBAPP_DATA'
      }
    });

    if (data.type === 'commercial_proposal') {
      const orderData = data.orderData;
      
      const adminMessage = `üîî *–ù–æ–≤–æ–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!*\n\n` +
        `üë§ *–ö–ª–∏–µ–Ω—Ç:* ${orderData.customerName}\n` +
        `üè¢ *–ö–æ–º–ø–∞–Ω–∏—è:* ${orderData.customerCompany}\n` +
        `üî¢ *–ò–ù–ù:* ${orderData.customerInn}\n` +
        `üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* ${orderData.customerPhone}\n` +
        `üìß *Email:* ${orderData.customerEmail}\n\n` +
        `üõí *–¢–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ:* ${orderData.items.length}\n` +
        `üí∞ *–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞:* ${(orderData.totalAmount/100).toLocaleString('ru-RU')} ‚ÇΩ\n\n` +
        `–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.`;
      
      console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:', adminMessage);
      
      await ctx.reply('‚úÖ –í–∞—à–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
    } else {
      await ctx.reply('–°–ø–∞—Å–∏–±–æ! –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è.');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
  }
});

// –ü–µ—Ä–µ—Ö–≤–∞—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', async (ctx) => {
  const webAppUrl = process.env.NEXT_PUBLIC_APP_URL || 'https://tlbot-2sl9hgbyw-eskimos-projects.vercel.app';
  
  await ctx.reply(
    '–ü—Ä–∏–≤–µ—Ç! üòä –î–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à–µ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ‚Äî —Ç–∞–º –≤—Å—è –º–∞–≥–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç! ‚ú®',
    {
      reply_markup: {
        inline_keyboard: [[
          {
            text: 'üõç –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥',
            web_app: { url: webAppUrl }
          }
        ]]
      }
    }
  );
});

export { bot };
