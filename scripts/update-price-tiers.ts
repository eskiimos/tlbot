#!/usr/bin/env tsx

import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function updatePriceTiers() {
  try {
    console.log('üè∑Ô∏è –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω–æ–≤—ã–µ —É—Ä–æ–≤–Ω–∏ –¥–ª—è —Ñ—É—Ç–±–æ–ª–æ–∫...');

    // –ù–∞—Ö–æ–¥–∏–º —Ñ—É—Ç–±–æ–ª–∫—É TL
    const tshirt = await prisma.product.findFirst({
      where: {
        slug: 't-shirt'
      },
      include: {
        priceTiers: true
      }
    });

    if (!tshirt) {
      console.log('‚ùå –§—É—Ç–±–æ–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }

    console.log(`üì¶ –ù–∞–π–¥–µ–Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞: ${tshirt.name}`);

    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ü–µ–Ω–æ–≤—ã–µ —É—Ä–æ–≤–Ω–∏
    await prisma.priceTier.deleteMany({
      where: {
        productId: tshirt.id
      }
    });

    console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ —Ü–µ–Ω–æ–≤—ã–µ —É—Ä–æ–≤–Ω–∏');

    // –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ (—Å–∞–º–∞—è –Ω–∏–∑–∫–∞—è –∑–∞ –µ–¥–∏–Ω–∏—Ü—É –ø—Ä–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º –∑–∞–∫–∞–∑–µ)
    const basePrice = 900; // 900‚ÇΩ –∑–∞ —Ñ—É—Ç–±–æ–ª–∫—É –ø—Ä–∏ –∑–∞–∫–∞–∑–µ 100+ —à—Ç

    // –°–æ–∑–¥–∞–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
    const priceTiers = [
      {
        minQuantity: 10,
        maxQuantity: 24,
        price: Math.round(basePrice * 1.5), // +50% –∫ –±–∞–∑–æ–≤–æ–π = 1350‚ÇΩ
        productId: tshirt.id
      },
      {
        minQuantity: 25,
        maxQuantity: 49,
        price: Math.round(basePrice * 1.4), // +40% –∫ –±–∞–∑–æ–≤–æ–π = 1260‚ÇΩ
        productId: tshirt.id
      },
      {
        minQuantity: 50,
        maxQuantity: 74,
        price: Math.round(basePrice * 1.3), // +30% –∫ –±–∞–∑–æ–≤–æ–π = 1170‚ÇΩ
        productId: tshirt.id
      },
      {
        minQuantity: 75,
        maxQuantity: 99,
        price: Math.round(basePrice * 1.2), // +20% –∫ –±–∞–∑–æ–≤–æ–π = 1080‚ÇΩ
        productId: tshirt.id
      },
      {
        minQuantity: 100,
        maxQuantity: null, // –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
        price: basePrice, // –±–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ = 900‚ÇΩ
        productId: tshirt.id
      }
    ];

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ü–µ–Ω–æ–≤—ã–µ —É—Ä–æ–≤–Ω–∏
    for (const tier of priceTiers) {
      await prisma.priceTier.create({
        data: tier
      });
      console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —É—Ä–æ–≤–µ–Ω—å: ${tier.minQuantity}-${tier.maxQuantity || '‚àû'} —à—Ç = ${tier.price}‚ÇΩ`);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑–æ–≤—É—é —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Ü–µ–Ω—É
    await prisma.product.update({
      where: { id: tshirt.id },
      data: {
        price: priceTiers[0].price // 1350‚ÇΩ - —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Ü–µ–Ω–∞
      }
    });

    console.log(`üè∑Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∞ –±–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: ${priceTiers[0].price}‚ÇΩ`);
    console.log('üéâ –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω–æ–≤—ã—Ö —É—Ä–æ–≤–Ω–µ–π:', error);
  } finally {
    await prisma.$disconnect();
  }
}

updatePriceTiers();
