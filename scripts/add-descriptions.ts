import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

// –û–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –æ–ø—Ü–∏–π —Ç–æ–≤–∞—Ä–æ–≤
const optionDescriptions = {
  // –ü—Ä–∏–Ω—Ç/–Ω–∞–Ω–µ—Å–µ–Ω–∏–µ - —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–ª–∞—Ç–Ω—ã—Ö
  print: {
    '–®–µ–ª–∫–æ–≥—Ä–∞—Ñ–∏—è (1 —Ü–≤–µ—Ç)': '–ü–µ—á–∞—Ç—å –æ–¥–Ω–∏–º —Ü–≤–µ—Ç–æ–º –∫—Ä–∞—Å–∫–æ–π —á–µ—Ä–µ–∑ —Ç—Ä–∞—Ñ–∞—Ä–µ—Ç. –ù–∞—Å—ã—â–µ–Ω–Ω—ã–π —Ü–≤–µ—Ç, —É—Å—Ç–æ–π—á–∏–≤–∞ –∫ —Å—Ç–∏—Ä–∫–µ. –≠–∫–æ–Ω–æ–º–∏—á–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –ª–æ–≥–æ—Ç–∏–ø–æ–≤.',
    '–®–µ–ª–∫–æ–≥—Ä–∞—Ñ–∏—è (2-3 —Ü–≤–µ—Ç–∞)': '–ú–Ω–æ–≥–æ—Ü–≤–µ—Ç–Ω–∞—è –ø–µ—á–∞—Ç—å –∫—Ä–∞—Å–∫–∞–º–∏. –Ø—Ä–∫–∏–µ –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞, —á–µ—Ç–∫–∏–µ –∫–æ–Ω—Ç—É—Ä—ã. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ª–æ–≥–æ—Ç–∏–ø–æ–≤ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ü–≤–µ—Ç–∞–º–∏.',
    '–®–µ–ª–∫–æ–≥—Ä–∞—Ñ–∏—è (4+ —Ü–≤–µ—Ç–æ–≤)': '–ü–æ–ª–Ω–æ—Ü–≤–µ—Ç–Ω–∞—è —à–µ–ª–∫–æ–≥—Ä–∞—Ñ–∏—è –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –¥–∏–∑–∞–π–Ω–æ–≤. –ü–µ—Ä–µ–¥–∞–µ—Ç –≤—Å–µ –æ—Ç—Ç–µ–Ω–∫–∏ –ª–æ–≥–æ—Ç–∏–ø–∞. –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø–µ—á–∞—Ç–∏.',
    '–¢–µ—Ä–º–æ—Ç—Ä–∞–Ω—Å—Ñ–µ—Ä': '–ù–∞–Ω–µ—Å–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞ –≥–æ—Ä—è—á–∏–º –ø—Ä–µ—Å—Å–æ–º. –ë—ã—Å—Ç—Ä–æ, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ñ–æ—Ç–æ –∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤. –ú—è–≥–∫–∞—è –Ω–∞ –æ—â—É–ø—å.',
    '–í—ã—à–∏–≤–∫–∞ (–¥–æ 10 000 —Å—Ç–µ–∂–∫–æ–≤)': '–ú–∞—à–∏–Ω–Ω–∞—è –≤—ã—à–∏–≤–∫–∞ –Ω–∏—Ç–∫–∞–º–∏ –¥–æ 10 —Ç—ã—Å—è—á —Å—Ç–µ–∂–∫–æ–≤. –ü—Ä–µ—Å—Ç–∏–∂–Ω—ã–π –≤–∏–¥, –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –∏ –ø—Ä–æ—Å—Ç—ã—Ö –ª–æ–≥–æ—Ç–∏–ø–æ–≤.',
    '–ü—Ä—è–º–∞—è —Ü–∏—Ñ—Ä–æ–≤–∞—è –ø–µ—á–∞—Ç—å': '–ü–µ—á–∞—Ç—å –ø—Ä—è–º–æ –Ω–∞ —Ç–∫–∞–Ω–∏ –±–µ–∑ –ø–ª–µ–Ω–æ–∫. –ü–µ—Ä–µ–¥–∞–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ —Å–ª–æ–∂–Ω—ã–µ –¥–∏–∑–∞–π–Ω—ã. –û—á–µ–Ω—å –º—è–≥–∫–∞—è, –Ω–µ –æ—â—É—â–∞–µ—Ç—Å—è –Ω–∞ —Ç–∫–∞–Ω–∏.',
  },
  
  // –ë–∏—Ä–∫–∏ –∏ —ç—Ç–∏–∫–µ—Ç–∫–∏ - —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–ª–∞—Ç–Ω—ã—Ö
  label: {
    '–°–æ—Å—Ç–∞–≤–Ω–∏–∫ (—É—Ö–æ–¥ –∑–∞ –∏–∑–¥–µ–ª–∏–µ–º)': '–ë–∏—Ä–∫–∞ —Å —Å–∏–º–≤–æ–ª–∞–º–∏ —É—Ö–æ–¥–∞ –∑–∞ –∏–∑–¥–µ–ª–∏–µ–º –ø–æ –ì–û–°–¢. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ —Ç–µ–∫—Å—Ç–∏–ª—è –≤ –†–æ—Å—Å–∏–∏. –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤–∏–¥ —Ç–æ–≤–∞—Ä–∞.',
    '–†–∞–∑–º–µ—Ä–Ω–∞—è –±–∏—Ä–∫–∞': '–ë–∏—Ä–∫–∞ —Å —Ä–∞–∑–º–µ—Ä–Ω–æ–π —Å–µ—Ç–∫–æ–π –∏ —Å–æ—Å—Ç–∞–≤–æ–º —Ç–∫–∞–Ω–∏. –ü–æ–º–æ–≥–∞–µ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä. –ü–æ–≤—ã—à–∞–µ—Ç –¥–æ–≤–µ—Ä–∏–µ –∫ —Ç–æ–≤–∞—Ä—É.',
    '–ë—Ä–µ–Ω–¥–æ–≤–∞—è —ç—Ç–∏–∫–µ—Ç–∫–∞': '–¢–∫–∞–Ω–µ–≤–∞—è —ç—Ç–∏–∫–µ—Ç–∫–∞ —Å –≤–∞—à–∏–º –ª–æ–≥–æ—Ç–∏–ø–æ–º, –≤—à–∏–≤–∞–µ—Ç—Å—è –≤ —à–æ–≤. –°–æ–∑–¥–∞–µ—Ç –æ—â—É—â–µ–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –±—Ä–µ–Ω–¥–∞ –æ–¥–µ–∂–¥—ã.',
    '–ü–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Ç –±–∏—Ä–æ–∫': '–í—Å–µ –≤–∏–¥—ã –±–∏—Ä–æ–∫: —Å–æ—Å—Ç–∞–≤–Ω–∏–∫, —Ä–∞–∑–º–µ—Ä–Ω–∞—è, –±—Ä–µ–Ω–¥–æ–≤–∞—è. –¢–æ–≤–∞—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∂–µ –≤ –º–∞–≥–∞–∑–∏–Ω–µ.',
  },
  
  // –£–ø–∞–∫–æ–≤–∫–∞ - —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–ª–∞—Ç–Ω—ã—Ö
  packaging: {
    '–ü–æ–ª–∏—ç—Ç–∏–ª–µ–Ω–æ–≤—ã–π –ø–∞–∫–µ—Ç': '–ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π –ø–∞–∫–µ—Ç —Å –∑–∞–º–∫–æ–º. –ó–∞—â–∏—â–∞–µ—Ç —Ç–æ–≤–∞—Ä –æ—Ç –≤–ª–∞–≥–∏ –∏ –≥—Ä—è–∑–∏. –£–¥–æ–±–µ–Ω –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.',
    '–ö—Ä–∞—Ñ—Ç-–ø–∞–∫–µ—Ç': '–≠–∫–æ–ª–æ–≥–∏—á–Ω—ã–π –±—É–º–∞–∂–Ω—ã–π –ø–∞–∫–µ—Ç. –°—Ç–∏–ª—å–Ω—ã–π –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —ç–∫–æ-–±—Ä–µ–Ω–¥–æ–≤. –ú–æ–∂–Ω–æ –Ω–∞–Ω–µ—Å—Ç–∏ –ª–æ–≥–æ—Ç–∏–ø.',
    '–ë—Ä–µ–Ω–¥–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞': '–ö–∞—Ä—Ç–æ–Ω–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞ —Å –≤–∞—à–∏–º –ª–æ–≥–æ—Ç–∏–ø–æ–º –∏ –¥–∏–∑–∞–π–Ω–æ–º. –°–æ–∑–¥–∞–µ—Ç wow-—ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞.',
    '–ü–æ–¥–∞—Ä–æ—á–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞': '–ü—Ä–µ–º–∏–∞–ª—å–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞ —Å –ª–µ–Ω—Ç–∞–º–∏ –∏ –¥–µ–∫–æ—Ä–æ–º. –¢–æ–≤–∞—Ä –≥–æ—Ç–æ–≤ –∫ –≤—Ä—É—á–µ–Ω–∏—é –∫–∞–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫.',
  }
};

async function addDescriptions() {
  try {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏–π –∫ –æ–ø—Ü–∏—è–º...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å –∏—Ö –æ–ø—Ü–∏—è–º–∏
    const products = await prisma.product.findMany({
      include: {
        options: true
      }
    });

    let updatedCount = 0;

    for (const product of products) {
      for (const option of product.options) {
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –æ–ø—Ü–∏–∏ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ color/design
        if (option.price === 0 || option.category === 'color' || option.category === 'design') {
          continue;
        }

        // –ò—â–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —ç—Ç–æ–π –æ–ø—Ü–∏–∏
        const categoryDescriptions = optionDescriptions[option.category as keyof typeof optionDescriptions];
        const description = categoryDescriptions?.[option.name as keyof typeof categoryDescriptions] as string;

        if (description) {
          await prisma.productOption.update({
            where: { id: option.id },
            data: { description }
          });
          
          console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${option.name} - ${description.substring(0, 50)}...`);
          updatedCount++;
        } else {
          console.log(`‚ö†Ô∏è  –û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è: ${option.category}/${option.name}`);
        }
      }
    }

    console.log(`\nüéâ –ì–æ—Ç–æ–≤–æ! –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedCount} –æ–ø–∏—Å–∞–Ω–∏–π –æ–ø—Ü–∏–π.`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏–π:', error);
  } finally {
    await prisma.$disconnect();
  }
}

addDescriptions();
