import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function createTestUser() {
  try {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await prisma.user.create({
      data: {
        telegramId: BigInt(123456789), // –¢–µ—Å—Ç–æ–≤—ã–π ID –¥–ª—è Telegram WebApp
        username: 'testuser',
        firstName: '–ò–≤–∞–Ω',
        lastName: '–ò–≤–∞–Ω–æ–≤',
        language: 'ru',
        organization: {
          create: {
            contactName: '–û–û–û "–¢–µ—Å—Ç–æ–≤–∞—è –ö–æ–º–ø–∞–Ω–∏—è"',
            inn: '1234567890',
            phone: '+7 (999) 123-45-67',
            email: 'test@company.ru'
          }
        }
      },
      include: {
        organization: true
      }
    })

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:')
    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', {
      telegramId: user.telegramId.toString(),
      firstName: user.firstName,
      lastName: user.lastName,
      username: user.username
    })
    console.log('üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:', user.organization)

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
  } finally {
    await prisma.$disconnect()
  }
}

createTestUser()
