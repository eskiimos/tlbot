import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function checkOrders() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã
    const allOrders = await prisma.order.findMany({
      orderBy: { createdAt: 'desc' },
      take: 10
    });
    
    console.log(`üìä –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤ –≤ –ë–î: ${allOrders.length}\n`);
    
    if (allOrders.length > 0) {
      allOrders.forEach((order, index) => {
        console.log(`${index + 1}. –ó–∞–∫–∞–∑ ‚Ññ${order.id.slice(-6).toUpperCase()}`);
        console.log(`   Telegram ID: ${order.telegramId}`);
        console.log(`   –ö–ª–∏–µ–Ω—Ç: ${order.customerName}`);
        console.log(`   –°—Ç–∞—Ç—É—Å: ${order.status}`);
        console.log(`   –°—É–º–º–∞: ${order.totalAmount}‚ÇΩ`);
        console.log(`   –î–∞—Ç–∞: ${order.createdAt.toLocaleDateString('ru-RU')}`);
        console.log('');
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      console.log('üîç –ó–∞–∫–∞–∑—ã –¥–ª—è Telegram ID: 123456789');
      const userOrders = await prisma.order.findMany({
        where: { telegramId: '123456789' },
        orderBy: { createdAt: 'desc' }
      });
      
      if (userOrders.length > 0) {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: ${userOrders.length}`);
        userOrders.forEach((order, index) => {
          console.log(`   ${index + 1}. ${order.customerName} - ${order.status} - ${order.totalAmount}‚ÇΩ`);
        });
      } else {
        console.log('‚ùå –ó–∞–∫–∞–∑–æ–≤ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      }
      
    } else {
      console.log('‚ùå –ó–∞–∫–∞–∑—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–∫–∞–∑–æ–≤:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkOrders();