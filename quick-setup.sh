#!/bin/bash

# üöÄ –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ TL Bot –Ω–∞ VPS
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –≤–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

set -e

echo "üöÄ –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ TL Bot –Ω–∞ VPS"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ root
if [ "$EUID" -ne 0 ]; then 
    echo "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ root: sudo ./quick-setup.sh"
    exit 1
fi

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –û–°
if [ -f /etc/os-release ]; then
    . /etc/os-release
    OS=$NAME
    VER=$VERSION_ID
else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É"
    exit 1
fi

echo "üñ•Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –û–°: $OS $VER"

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
if [[ $OS == *"Ubuntu"* ]] || [[ $OS == *"Debian"* ]]; then
    apt update && apt upgrade -y
    apt install -y curl wget git nano htop ufw fail2ban
elif [[ $OS == *"CentOS"* ]] || [[ $OS == *"Red Hat"* ]]; then
    yum update -y
    yum install -y curl wget git nano htop
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
echo "üê≥ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
if ! command -v docker &> /dev/null; then
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    rm get-docker.sh
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Docker
    systemctl start docker
    systemctl enable docker
    
    echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose
echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
if ! command -v docker-compose &> /dev/null; then
    curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    echo "‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js (–¥–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥)
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js..."
if ! command -v node &> /dev/null; then
    curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
    apt-get install -y nodejs
    echo "‚úÖ Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ Node.js —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "üë§ –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è tlbot..."
if ! id "tlbot" &>/dev/null; then
    useradd -m -s /bin/bash tlbot
    usermod -aG docker tlbot
    echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å tlbot —Å–æ–∑–¥–∞–Ω"
else
    echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å tlbot —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    usermod -aG docker tlbot
fi

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–∞–µ—Ä–≤–æ–ª
echo "üî• –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–∞–µ—Ä–≤–æ–ª..."
if command -v ufw &> /dev/null; then
    ufw --force reset
    ufw default deny incoming
    ufw default allow outgoing
    ufw allow ssh
    ufw allow 80/tcp
    ufw allow 443/tcp
    ufw --force enable
    echo "‚úÖ –§–∞–µ—Ä–≤–æ–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Nginx
echo "üåê –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Nginx..."
if ! command -v nginx &> /dev/null; then
    if [[ $OS == *"Ubuntu"* ]] || [[ $OS == *"Debian"* ]]; then
        apt install -y nginx
    elif [[ $OS == *"CentOS"* ]] || [[ $OS == *"Red Hat"* ]]; then
        yum install -y nginx
    fi
    
    systemctl start nginx
    systemctl enable nginx
    echo "‚úÖ Nginx —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ Nginx —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Certbot –¥–ª—è SSL
echo "üîí –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Certbot..."
if ! command -v certbot &> /dev/null; then
    if [[ $OS == *"Ubuntu"* ]] || [[ $OS == *"Debian"* ]]; then
        apt install -y certbot python3-certbot-nginx
    elif [[ $OS == *"CentOS"* ]] || [[ $OS == *"Red Hat"* ]]; then
        yum install -y certbot python3-certbot-nginx
    fi
    echo "‚úÖ Certbot —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ Certbot —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
echo "üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞..."
mkdir -p /home/tlbot/app
mkdir -p /home/tlbot/backups
mkdir -p /home/tlbot/logs
chown -R tlbot:tlbot /home/tlbot

echo ""
echo "üéâ –°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é!"
echo "================================"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –≤ /home/tlbot/app/"
echo "2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è tlbot: su - tlbot"
echo "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env.production"
echo "4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–µ–ø–ª–æ–π: ./deploy.sh"
echo ""
echo "üìä –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏:"
docker --version
docker-compose --version
node --version
nginx -v
echo ""
echo "üåê IP —Å–µ—Ä–≤–µ—Ä–∞: $(curl -s ifconfig.me || hostname -I | awk '{print $1}')"
