import { Telegraf } from 'telegraf';
import dotenv from 'dotenv';

dotenv.config();

const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN!);

async function checkBotWebhook() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook –±–æ—Ç–∞...\n');
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
    const webhookInfo = await bot.telegram.getWebhookInfo();
    
    console.log('üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:');
    console.log('URL:', webhookInfo.url || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù (polling —Ä–µ–∂–∏–º)');
    console.log('Pending updates:', webhookInfo.pending_update_count);
    console.log('Last error:', webhookInfo.last_error_date ? new Date(webhookInfo.last_error_date * 1000) : '–ù–µ—Ç');
    console.log('Max connections:', webhookInfo.max_connections);
    
    if (webhookInfo.url) {
      console.log('\n‚ö†Ô∏è  –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ webhook —Ä–µ–∂–∏–º–µ!');
      console.log('–≠—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—Ç, –ø–æ—á–µ–º—É –≤–∞—à–∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç.');
      console.log('\nüîß –í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—à–µ–Ω–∏—è:');
      console.log('1. –£–¥–∞–ª–∏—Ç—å webhook: await bot.telegram.deleteWebhook()');
      console.log('2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–π URL —á–µ—Ä–µ–∑ ngrok');
      console.log('3. –î–µ–ø–ª–æ–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω');
    } else {
      console.log('\n‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ polling —Ä–µ–∂–∏–º–µ');
      console.log('–õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ bot.ts');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook:', error);
  }
}

checkBotWebhook();