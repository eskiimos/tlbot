#!/bin/bash

# üöÄ –î–µ–ø–ª–æ–π TL Bot –Ω–∞ —Ä–µ–≥.–æ–±–ª–∞–∫–æ VPS
# IP: 89.104.65.237
# Ubuntu 24.04 LTS

echo "üöÄ –î–µ–ø–ª–æ–π TL Bot –Ω–∞ —Ä–µ–≥.–æ–±–ª–∞–∫–æ VPS"
echo "IP: 89.104.65.237"
echo "=================================="

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ä–µ–≥.–æ–±–ª–∞–∫–æ (1GB RAM)
echo "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞..."

# –û–±–Ω–æ–≤–ª—è–µ–º docker-compose –¥–ª—è —Å–ª–∞–±–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
cat > docker-compose.regoblako.yml << 'EOF'
version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: tlbot_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: tlbot
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: tlbot_prod
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - tlbot_network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: tlbot_app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NODE_OPTIONS="--max-old-space-size=384"
    env_file:
      - .env.regoblako
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - tlbot_network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

volumes:
  postgres_data:

networks:
  tlbot_network:
    driver: bridge
EOF

echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Docker —Å–æ–∑–¥–∞–Ω–∞"

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
if [ ! -f ".env.regoblako" ]; then
    echo "‚ùå –§–∞–π–ª .env.regoblako –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose -f docker-compose.regoblako.yml down 2>/dev/null || true

# –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑
echo "üî® –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
docker-compose -f docker-compose.regoblako.yml build

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è  –ó–∞–ø—É—Å–∫–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
docker-compose -f docker-compose.regoblako.yml up -d postgres

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –ë–î
echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
sleep 15

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üìä –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
docker-compose -f docker-compose.regoblako.yml run --rm app npx prisma migrate deploy

# –ó–∞–ø–æ–ª–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
echo "üìù –ó–∞–ø–æ–ª–Ω—è–µ–º –±–∞–∑—É –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏..."
docker-compose -f docker-compose.regoblako.yml run --rm app npx prisma db seed || echo "‚ö†Ô∏è  Seed –ø—Ä–æ–ø—É—â–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω)"

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
docker-compose -f docker-compose.regoblako.yml up -d app

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
sleep 20

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å..."
docker-compose -f docker-compose.regoblako.yml ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
echo "üè• –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
for i in {1..10}; do
    if curl -f http://localhost:3000/api/health > /dev/null 2>&1; then
        echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
        break
    else
        echo "‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $i/10..."
        sleep 5
    fi
    
    if [ $i -eq 10 ]; then
        echo "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        echo "üìã –õ–æ–≥–∏:"
        docker-compose -f docker-compose.regoblako.yml logs --tail=20 app
        exit 1
    fi
done

echo ""
echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo "========================"
echo "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://89.104.65.237:3000"
echo "üë§ –ê–¥–º–∏–Ω–∫–∞: http://89.104.65.237:3000/admin"
echo "üìã Health check: http://89.104.65.237:3000/api/health"
echo ""
echo "üë§ –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω–∫—É:"
echo "Email: admin@tlbot.local"
echo "Password: AdminTLBot2025!"
echo ""
echo "ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram webhook:"
echo "curl -F \"url=http://89.104.65.237:3000/api/bot\" \"https://api.telegram.org/bot7482550053:AAEd0XzEb3tkL1pryqkMYXn1YhoqJaMD7N0/setWebhook\""
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "docker-compose -f docker-compose.regoblako.yml logs -f app  # –ª–æ–≥–∏"
echo "docker-compose -f docker-compose.regoblako.yml restart app  # –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
echo "docker-compose -f docker-compose.regoblako.yml ps          # —Å—Ç–∞—Ç—É—Å"
