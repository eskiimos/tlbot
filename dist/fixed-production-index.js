"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const bot_1 = require("./bot");
console.log('üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ...');
// –°–æ–∑–¥–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è health check –∏ webhook
const app = (0, express_1.default)();
const port = process.env.PORT || 3000;
// Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ JSON
app.use(express_1.default.json());
// Health check endpoint –¥–ª—è Railway
app.get('/health', (req, res) => {
    res.status(200).json({
        status: 'ok',
        timestamp: new Date().toISOString(),
        service: 'telegram-bot'
    });
});
app.get('/', (req, res) => {
    res.status(200).json({
        message: 'Total Lookas Telegram Bot is running!',
        timestamp: new Date().toISOString()
    });
});
// Webhook endpoint –¥–ª—è Telegram
app.post('/webhook', (req, res) => {
    try {
        bot_1.bot.handleUpdate(req.body);
        res.status(200).send('OK');
    }
    catch (error) {
        console.error('Webhook error:', error);
        res.status(500).send('Error');
    }
});
// –ó–∞–ø—É—Å–∫ HTTP —Å–µ—Ä–≤–µ—Ä–∞
app.listen(port, () => {
    console.log(`Health check server running on port ${port}`);
});
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async function startBot() {
    try {
        console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...');
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        const botInfo = await bot_1.bot.telegram.getMe();
        console.log(`ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: @${botInfo.username} (ID: ${botInfo.id})`);
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
        const webhookUrl = 'https://tlbot-production-production.up.railway.app/webhook';
        console.log('–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook:', webhookUrl);
        await bot_1.bot.telegram.setWebhook(webhookUrl);
        console.log('‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
        return true;
    }
    catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:', error);
        process.exit(1);
    }
}
// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
startBot();
// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
process.on('SIGINT', async () => {
    console.log('–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
    await bot_1.bot.telegram.deleteWebhook();
    process.exit(0);
});
process.on('SIGTERM', async () => {
    console.log('–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
    await bot_1.bot.telegram.deleteWebhook();
    process.exit(0);
});
exports.default = app;
