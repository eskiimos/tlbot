"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = TestHTMLAPIPage;
const react_1 = require("react");
function TestHTMLAPIPage() {
    const [result, setResult] = (0, react_1.useState)('');
    const [loading, setLoading] = (0, react_1.useState)(false);
    const testHTMLAPI = async () => {
        setLoading(true);
        setResult('');
        try {
            console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º HTML API endpoint...');
            const testData = {
                cartItems: [
                    {
                        id: '1',
                        productName: '–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞',
                        quantity: 2,
                        basePrice: 1500,
                        totalPrice: 3000,
                        detailedProposal: true,
                        optionsDetails: [
                            { name: '–ß–µ—Ä–Ω—ã–π', category: '–¶–≤–µ—Ç', price: 0 },
                            { name: 'L', category: '–†–∞–∑–º–µ—Ä', price: 0 },
                            { name: '–®–µ–ª–∫–æ–≥—Ä–∞—Ñ–∏—è', category: '–ü–µ—á–∞—Ç—å', price: 500 }
                        ]
                    },
                    {
                        id: '2',
                        productName: '–ö–µ–ø–∫–∞ TL',
                        quantity: 1,
                        basePrice: 2000,
                        totalPrice: 2000,
                        detailedProposal: false,
                        optionsDetails: []
                    }
                ],
                userData: {
                    telegramId: '228594178',
                    firstName: '–¢–µ—Å—Ç–æ–≤—ã–π',
                    phoneNumber: '+7 (900) 123-45-67',
                    email: 'test@example.com'
                }
            };
            console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ /api/proposals-html');
            const response = await fetch('/api/proposals-html', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(testData),
            });
            console.log('üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:', response.status, response.statusText);
            // –ü–æ–ª—É—á–∞–µ–º headers
            const headers = Array.from(response.headers.entries());
            console.log('üìã Headers:', headers);
            // –ü–æ–ª—É—á–∞–µ–º —Å—ã—Ä–æ–π —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
            const responseText = await response.text();
            console.log('üìÑ –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç:', responseText);
            let resultText = `–°—Ç–∞—Ç—É—Å: ${response.status} ${response.statusText}\n\n`;
            resultText += `Headers:\n${headers.map(([key, value]) => `${key}: ${value}`).join('\n')}\n\n`;
            resultText += `–°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç:\n${responseText}\n\n`;
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ JSON
            try {
                const jsonData = JSON.parse(responseText);
                resultText += `JSON –¥–∞–Ω–Ω—ã–µ:\n${JSON.stringify(jsonData, null, 2)}`;
            }
            catch (parseError) {
                resultText += `–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: ${parseError}`;
            }
            setResult(resultText);
        }
        catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
            setResult(`–û—à–∏–±–∫–∞: ${error}`);
        }
        finally {
            setLoading(false);
        }
    };
    return (<div className="container mx-auto p-4 max-w-4xl">
      <h1 className="text-2xl font-bold mb-4">üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTML API</h1>
      
      <div className="mb-4">
        <button onClick={testHTMLAPI} disabled={loading} className="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50">
          {loading ? '‚è≥ –¢–µ—Å—Ç–∏—Ä—É–µ–º...' : 'üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å HTML API'}
        </button>
      </div>
      
      {result && (<div className="bg-gray-100 p-4 rounded">
          <h2 className="text-lg font-semibold mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç:</h2>
          <pre className="whitespace-pre-wrap text-sm overflow-auto max-h-96">
            {result}
          </pre>
        </div>)}
      
      <div className="mt-4 text-sm text-gray-600">
        <p>–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π HTML API endpoint /api/proposals-html</p>
        <p>–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞.</p>
        <p>–ï—Å–ª–∏ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –¥–æ–ª–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram —Å HTML –ö–ü.</p>
      </div>
    </div>);
}
