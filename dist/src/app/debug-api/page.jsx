"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = DebugAPIPage;
const react_1 = require("react");
function DebugAPIPage() {
    const [result, setResult] = (0, react_1.useState)('');
    const [loading, setLoading] = (0, react_1.useState)(false);
    const testAPI = async () => {
        setLoading(true);
        setResult('');
        try {
            console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint...');
            // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π PDF blob
            const canvas = document.createElement('canvas');
            canvas.width = 100;
            canvas.height = 100;
            const ctx = canvas.getContext('2d');
            if (ctx) {
                ctx.fillStyle = 'red';
                ctx.fillRect(0, 0, 100, 100);
            }
            const blob = await new Promise((resolve) => {
                canvas.toBlob((blob) => {
                    resolve(blob || new Blob());
                }, 'image/png');
            });
            const formData = new FormData();
            formData.append('file', new File([blob], 'test.pdf', { type: 'application/pdf' }));
            formData.append('telegramId', '228594178'); // –í–∞—à —Ä–µ–∞–ª—å–Ω—ã–π Telegram ID
            formData.append('orderData', JSON.stringify({ test: true }));
            console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ /api/proposals');
            const response = await fetch('/api/proposals', {
                method: 'POST',
                body: formData,
            });
            console.log('üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:', response.status, response.statusText);
            // –ü–æ–ª—É—á–∞–µ–º headers
            const headers = Array.from(response.headers.entries());
            console.log('üìã Headers:', headers);
            // –ü–æ–ª—É—á–∞–µ–º —Å—ã—Ä–æ–π —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
            const responseText = await response.text();
            console.log('üìÑ –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç:', responseText);
            let resultText = `–°—Ç–∞—Ç—É—Å: ${response.status} ${response.statusText}\n\n`;
            resultText += `Headers:\n${headers.map(([key, value]) => `${key}: ${value}`).join('\n')}\n\n`;
            resultText += `–°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç:\n${responseText}\n\n`;
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ JSON
            try {
                const jsonData = JSON.parse(responseText);
                resultText += `JSON –¥–∞–Ω–Ω—ã–µ:\n${JSON.stringify(jsonData, null, 2)}`;
            }
            catch (parseError) {
                resultText += `–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: ${parseError}`;
            }
            setResult(resultText);
        }
        catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
            setResult(`–û—à–∏–±–∫–∞: ${error}`);
        }
        finally {
            setLoading(false);
        }
    };
    return (<div className="container mx-auto p-4 max-w-4xl">
      <h1 className="text-2xl font-bold mb-4">üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ API endpoint</h1>
      
      <div className="mb-4">
        <button onClick={testAPI} disabled={loading} className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50">
          {loading ? '‚è≥ –¢–µ—Å—Ç–∏—Ä—É–µ–º...' : 'üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å API'}
        </button>
      </div>
      
      {result && (<div className="bg-gray-100 p-4 rounded">
          <h2 className="text-lg font-semibold mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç:</h2>
          <pre className="whitespace-pre-wrap text-sm overflow-auto max-h-96">
            {result}
          </pre>
        </div>)}
      
      <div className="mt-4 text-sm text-gray-600">
        <p>–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç API endpoint /api/proposals –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞.</p>
        <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –ø–∞—Ä—Å–∏–Ω–≥–æ–º JSON –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ.</p>
      </div>
    </div>);
}
