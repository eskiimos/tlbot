import { Telegraf } from 'telegraf';
import dotenv from 'dotenv';
import { prisma } from '../lib/prisma';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config({ path: '.env.local' });

const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN!);

// –•—Ä–∞–Ω–∏–º ID –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const userMessages = new Map<number, number[]>();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async function deleteUserMessages(chatId: number) {
  const messageIds = userMessages.get(chatId);
  if (messageIds && messageIds.length > 0) {
    try {
      // –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
      for (const messageId of messageIds) {
        try {
          await bot.telegram.deleteMessage(chatId, messageId);
        } catch (err) {
          // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è (—Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ —Å—Ç–∞—Ä–æ–µ)
          console.log(`–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ ${messageId}:`, err.message);
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
    }
    // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
    userMessages.set(chatId, []);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
function saveMessageId(chatId: number, messageId: number) {
  const messages = userMessages.get(chatId) || [];
  messages.push(messageId);
  // –•—Ä–∞–Ω–∏–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
  if (messages.length > 10) {
    messages.shift();
  }
  userMessages.set(chatId, messages);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function upsertUser(ctx: any) {
  const user = ctx.from;
  if (!user) return null;

  // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ –∑–∞–ø–∏—Å–∏ –≤ –ë–î
  if (process.env.NODE_ENV !== 'production') {
    return {
      id: 1,
      telegramId: BigInt(user.id),
      username: user.username,
      firstName: user.first_name,
      lastName: user.last_name,
      language: user.language_code || 'ru',
      isPremium: user.is_premium || false,
      isBot: user.is_bot || false,
      createdAt: new Date(),
      updatedAt: new Date()
    };
  }

  try {
    const dbUser = await prisma.user.upsert({
      where: { telegramId: BigInt(user.id) },
      update: {
        username: user.username,
        firstName: user.first_name,
        lastName: user.last_name,
        language: user.language_code || 'ru',
        isPremium: user.is_premium || false,
        updatedAt: new Date()
      },
      create: {
        telegramId: BigInt(user.id),
        username: user.username,
        firstName: user.first_name,
        lastName: user.last_name,
        language: user.language_code || 'ru',
        isPremium: user.is_premium || false,
        isBot: user.is_bot || false
      }
    });

    return dbUser;
  } catch (error) {
    console.error('Error upserting user:', error);
    return null;
  }
}

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start(async (ctx) => {
  const user = await upsertUser(ctx);
  const firstName = user?.firstName || ctx.from?.first_name || '–¥—Ä—É–≥';
  const webAppUrl = process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000';
  
  // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
  await deleteUserMessages(ctx.chat.id);
  
  // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ Web App –∫–Ω–æ–ø–∫–∏
  if (process.env.NODE_ENV !== 'production') {
    const message = await ctx.reply(
      `–ü—Ä–∏–≤–µ—Ç, ${firstName}! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Total Lookas!\n\n` +
      `üé® –ú—ã ‚Äî –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞, —Å 2017 –≥–æ–¥–∞ –ø—Ä–µ–≤—Ä–∞—â–∞—é—â–µ–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ä—á –≤ –∞—Ä—Ç-–æ–±—ä–µ–∫—Ç—ã! ` +
      `–û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–µ—Ä–∑–∫–∏–π —Å—Ç–∏–ª—å —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º —Å–µ—Ä–≤–∏—Å–æ–º –∏ –º–æ–∂–µ–º –≤—Å—ë ‚Äî –±—ã—Å—Ç—Ä–æ, —Å–º–µ–ª–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ.\n\n` +
      `‚ö°Ô∏è –û—Ç –∏–¥–µ–∏ –¥–æ –≥–æ—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤—Å–µ–≥–æ –∑–∞ 20 –¥–Ω–µ–π!\n` +
      `üéØ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: –¥–∏–∑–∞–π–Ω ‚Üí –ª–µ–∫–∞–ª–∞ ‚Üí –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ ‚Üí –ª–æ–≥–∏—Å—Ç–∏–∫–∞\n` +
      `üëï –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç: –æ—Ç —Ñ—É—Ç–±–æ–ª–æ–∫ –∏ —Ö—É–¥–∏ –¥–æ —é–≤–µ–ª–∏—Ä–Ω—ã—Ö –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤\n\n` +
      `üîß –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: –æ—Ç–∫—Ä–æ–π—Ç–µ ${webAppUrl} –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞.\n\n` +
      `–ì–æ—Ç–æ–≤ "–ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–¥–µ—Ç—å" —Å–≤–æ–π –±—Ä–µ–Ω–¥? –ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å! üöÄ`
    );
    saveMessageId(ctx.chat.id, message.message_id);
    return;
  }
  
  // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º Web App –∫–Ω–æ–ø–∫—É
  const message = await ctx.reply(
    `–ü—Ä–∏–≤–µ—Ç, ${firstName}! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Total Lookas!\n\n` +
    `üé® –ú—ã ‚Äî –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞, —Å 2017 –≥–æ–¥–∞ –ø—Ä–µ–≤—Ä–∞—â–∞—é—â–µ–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ä—á –≤ –∞—Ä—Ç-–æ–±—ä–µ–∫—Ç—ã! ` +
    `–û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–µ—Ä–∑–∫–∏–π —Å—Ç–∏–ª—å —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º —Å–µ—Ä–≤–∏—Å–æ–º –∏ –º–æ–∂–µ–º –≤—Å—ë ‚Äî –±—ã—Å—Ç—Ä–æ, —Å–º–µ–ª–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ.\n\n` +
    `‚ö°Ô∏è –û—Ç –∏–¥–µ–∏ –¥–æ –≥–æ—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤—Å–µ–≥–æ –∑–∞ 30 –¥–Ω–µ–π!\n` +
    `üéØ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: –¥–∏–∑–∞–π–Ω ‚Üí –ª–µ–∫–∞–ª–∞ ‚Üí –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ ‚Üí –ª–æ–≥–∏—Å—Ç–∏–∫–∞\n` +
    `üëï –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç: –æ—Ç —Ñ—É—Ç–±–æ–ª–æ–∫ –∏ —Ö—É–¥–∏ –¥–æ —é–≤–µ–ª–∏—Ä–Ω—ã—Ö –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤\n\n` +
    `–ì–æ—Ç–æ–≤ "–ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–¥–µ—Ç—å" —Å–≤–æ–π –±—Ä–µ–Ω–¥? –ñ–º–∏ –∫–Ω–æ–ø–∫—É –∏ –ø–æ–≥–Ω–∞–ª–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –∫—Ä—É—Ç–æ–µ! üöÄ`,
    {
      reply_markup: {
        inline_keyboard: [[
          {
            text: 'üî• –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥',
            web_app: { url: webAppUrl }
          }
        ]]
      }
    }
  );
  saveMessageId(ctx.chat.id, message.message_id);
});

// –ö–æ–º–∞–Ω–¥–∞ /id - –ø–æ–∫–∞–∑–∞—Ç—å Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
bot.command('id', async (ctx) => {
  if (process.env.NODE_ENV === 'development') {
    const userId = ctx.from?.id;
    ctx.reply(
      `üÜî –í–∞—à Telegram ID: \`${userId}\`\n\n` +
      `–≠—Ç–æ—Ç ID –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ö–ü –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.`,
      { parse_mode: 'Markdown' }
    );
  } else {
    ctx.reply('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.');
  }
});

// –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
bot.on('text', async (ctx) => {
  const user = await upsertUser(ctx);
  const webAppUrl = process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000';
  
  // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
  await deleteUserMessages(ctx.chat.id);
  
  // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ª–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
  if (process.env.NODE_ENV !== 'production') {
    console.log(`[DEV] –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${user?.firstName || ctx.from?.first_name}: ${ctx.message.text}`);
    
    // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ Web App –∫–Ω–æ–ø–∫–∏
    const message = await ctx.reply(
      `–ü—Ä–∏–≤–µ—Ç! üòä –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –æ—Ç–∫—Ä–æ–π—Ç–µ ${webAppUrl} –≤ –±—Ä–∞—É–∑–µ—Ä–µ.\n\n` +
      `üîß –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: Web App –∫–Ω–æ–ø–∫–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç —Å HTTP, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É.`
    );
    saveMessageId(ctx.chat.id, message.message_id);
    return;
  }
  
  // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º Web App –∫–Ω–æ–ø–∫—É
  const message = await ctx.reply(
    '–ü—Ä–∏–≤–µ—Ç! üòä –î–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à–µ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ‚Äî —Ç–∞–º –≤—Å—è –º–∞–≥–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç! ‚ú®',
    {
      reply_markup: {
        inline_keyboard: [[
          {
            text: 'üõç –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥',
            web_app: { url: webAppUrl }
          }
        ]]
      }
    }
  );
  saveMessageId(ctx.chat.id, message.message_id);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
bot.on('web_app_data', async (ctx) => {
  const user = await upsertUser(ctx);
  
  // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
  await deleteUserMessages(ctx.chat.id);
  
  try {
    const data = JSON.parse(ctx.webAppData.data);
    console.log('–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', data);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É
    if (process.env.NODE_ENV === 'production') {
      await prisma.webAppData.create({
        data: {
          userId: user?.id?.toString() || 'unknown',
          data: JSON.stringify(data),
          type: data.type || 'UNKNOWN'
        }
      });
    }

    // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await prisma.message.create({
      data: {
        userId: user?.id?.toString(),
        content: `–î–∞–Ω–Ω—ã–µ –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ${JSON.stringify(data)}`,
        type: 'WEBAPP_DATA'
      }
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º
    if (data.type === 'commercial_proposal') {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
      const orderData = data.orderData;
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
      const adminMessage = `üîî *–ù–æ–≤–æ–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!*\n\n` +
        `üë§ *–ö–ª–∏–µ–Ω—Ç:* ${orderData.customerName}\n` +
        `üè¢ *–ö–æ–º–ø–∞–Ω–∏—è:* ${orderData.customerCompany}\n` +
        `üî¢ *–ò–ù–ù:* ${orderData.customerInn}\n` +
        `üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* ${orderData.customerPhone}\n` +
        `üìß *Email:* ${orderData.customerEmail}\n\n` +
        `üõí *–¢–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ:* ${orderData.items.length}\n` +
        `üí∞ *–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞:* ${(orderData.totalAmount/100).toLocaleString('ru-RU')} ‚ÇΩ\n\n` +
        `–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.`;
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
      try {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:', adminMessage);
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:', err);
      }
      
      // –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      const message = await ctx.reply('‚úÖ –í–∞—à–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
      saveMessageId(ctx.chat.id, message.message_id);
    } else {
      // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö
      const message = await ctx.reply('–°–ø–∞—Å–∏–±–æ! –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è.');
      saveMessageId(ctx.chat.id, message.message_id);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
    const message = await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    saveMessageId(ctx.chat.id, message.message_id);
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
export async function startBot() {
  try {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...');
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    const botInfo = await bot.telegram.getMe();
    console.log(`ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: @${botInfo.username} (ID: ${botInfo.id})`);
    
    if (process.env.NODE_ENV !== 'production') {
      // –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —á–µ—Ä–µ–∑ Long Polling —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
      // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫
      console.log('–£–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫...');
      await bot.telegram.deleteWebhook();
      console.log('–í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω');
      
      // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
      console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ—à–∏–±–æ–∫...');
      bot.catch((err, ctx) => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram:', err);
      });
      
      console.log('–ó–∞–ø—É—Å–∫ Long Polling...');
      bot.launch().then(() => {
        console.log('ÔøΩÔøΩ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
      }).catch((error) => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Long Polling:', error);
      });
      
      // –î–∞–µ–º –≤—Ä–µ–º—è –±–æ—Ç—É –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è
      await new Promise(resolve => setTimeout(resolve, 1000));
      console.log('‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –±–æ—Ç —Å–ª—É—à–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
      process.once('SIGINT', () => bot.stop('SIGINT'));
      process.once('SIGTERM', () => bot.stop('SIGTERM'));
    } else {
      // –í production —Ä–µ–∂–∏–º–µ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API
      await bot.telegram.getMe();
      console.log('Telegram –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ webhook –∑–∞–ø—Ä–æ—Å–æ–≤!');
    }
    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞:', error);
    return false;
  }
}

export default bot;
