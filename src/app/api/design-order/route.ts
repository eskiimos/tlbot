import { NextRequest, NextResponse } from 'next/server';

export async function POST(request: NextRequest) {
  try {
    const orderData = await request.json();
    
    // –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
    console.log('–ü–æ–ª—É—á–µ–Ω –∑–∞–∫–∞–∑ –Ω–∞ –¥–∏–∑–∞–π–Ω:', orderData);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
    const message = formatOrderMessage(orderData);
    console.log('–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:', message);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram (–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞)
    let telegramSent = false;
    if (process.env.TELEGRAM_BOT_TOKEN) {
      try {
        await sendTelegramMessage(message, orderData.user);
        telegramSent = true;
        console.log('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');
      } catch (telegramError) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', telegramError);
        // –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –µ—Å–ª–∏ Telegram –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
      }
    } else {
      console.log('TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –≤ Telegram');
    }
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    // await saveOrderToDatabase(orderData);
    
    return NextResponse.json({
      success: true,
      orderNumber: orderData.orderNumber,
      message: '–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω',
      telegramSent
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞:', error);
    return NextResponse.json(
      { 
        success: false, 
        message: '–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞',
        error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
      },
      { status: 500 }
    );
  }
}

function formatOrderMessage(orderData: any) {
  const { orderNumber, designType, category, brandbook, user } = orderData;
  
  const designTypeText = designType === 'single-item' 
    ? 'üé® –î–∏–∑–∞–π–Ω –æ–¥–Ω–æ–≥–æ –∏–∑–¥–µ–ª–∏—è (–æ—Ç 15,000 ‚ÇΩ)' 
    : 'üé® –î–∏–∑–∞–π–Ω –∫–æ–ª–ª–µ–∫—Ü–∏–∏ (–æ—Ç 50,000 ‚ÇΩ)';
    
  const categoryText = category === 'clothing' 
    ? 'üëï –û–¥–µ–∂–¥–∞' 
    : category === 'accessories' 
    ? 'üéí –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã' 
    : 'üì¶ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏';
    
  const brandbookText = brandbook === 'yes' 
    ? '‚úÖ –ï—Å—Ç—å –≥–æ—Ç–æ–≤—ã–π' 
    : brandbook === 'partial' 
    ? '‚ö†Ô∏è –ß–∞—Å—Ç–∏—á–Ω–æ –≥–æ—Ç–æ–≤' 
    : 'üÜï –°–æ–∑–¥–∞—ë–º —Å –Ω—É–ª—è';

  const userInfo = user 
    ? `üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> ${user.first_name} ${user.last_name || ''} ${user.username ? `(@${user.username})` : ''}`
    : 'üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> –ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

  return `üöÄ <b>–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –î–ò–ó–ê–ô–ù</b>

üìã <b>–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</b> <code>${orderNumber}</code>

${userInfo}

ÔøΩ <b>–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:</b>
‚Ä¢ ${designTypeText}
‚Ä¢ ${categoryText}  
‚Ä¢ <b>–ë—Ä–µ–Ω–¥–±—É–∫:</b> ${brandbookText}

‚è∞ <b>–í—Ä–µ–º—è:</b> ${new Date().toLocaleString('ru-RU')}
üåê <b>–ò—Å—Ç–æ—á–Ω–∏–∫:</b> –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

<i>–¢—Ä–µ–±—É–µ—Ç—Å—è —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞</i>

#–¥–∏–∑–∞–π–Ω #–∑–∞—è–≤–∫–∞ #–Ω–æ–≤—ã–π_–∑–∞–∫–∞–∑`;
}

async function sendTelegramMessage(message: string, user: any) {
  try {
    const botToken = process.env.TELEGRAM_BOT_TOKEN;
    const chatId = process.env.TELEGRAM_ADMIN_CHAT_ID || user?.id;
    
    if (!botToken || !chatId) {
      console.log('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã Telegram –±–æ—Ç–∞');
      return;
    }

    const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: 'HTML'
      })
    });

    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: ${response.statusText}`);
    }

    console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error);
    throw error;
  }
}
