import { NextResponse } from 'next/server';

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

export async function POST(request: Request) {
  try {
    const orderData = await request.json();
    
    if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
      console.error('Telegram credentials not configured');
      return NextResponse.json(
        { error: 'Telegram not configured' },
        { status: 500 }
      );
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
    const products = orderData.products || [];
    const quantities = orderData.quantities || {};
    
    let productsList = '';
    let totalQuantity = 0;
    
    products.forEach((product: string) => {
      const quantity = quantities[product] || 10;
      productsList += `‚Ä¢ ${product}: ${quantity} —à—Ç.\n`;
      totalQuantity += quantity;
    });

    const message = `üè≠ –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ü–†–û–ò–ó–í–û–î–°–¢–í–û\n\n` +
      `üìã –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: #${orderData.orderNumber}\n` +
      `üéØ –£—Å–ª—É–≥–∞: –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –º–µ—Ä—á–∞\n` +
      `üìÖ –î–∞—Ç–∞: ${new Date(orderData.timestamp).toLocaleString('ru-RU')}\n\n` +
      `üì¶ –¢–û–í–ê–†–´:\n${productsList}\n` +
      `üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${totalQuantity} —à—Ç.\n` +
      `üíº –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π: ${products.length}\n\n` +
      `üë§ –ö–õ–ò–ï–ù–¢:\n` +
      `${orderData.user ? 
        `‚Ä¢ –ò–º—è: ${orderData.user.first_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} ${orderData.user.last_name || ''}\n` +
        `‚Ä¢ Username: @${orderData.user.username || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n` +
        `‚Ä¢ ID: ${orderData.user.id || '–ù–µ —É–∫–∞–∑–∞–Ω'}`
        : '‚Ä¢ –ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
      }\n\n` +
      `üåê –ò—Å—Ç–æ—á–Ω–∏–∫: ${orderData.source || 'webapp'}`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
    const telegramResponse = await fetch(
      `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`,
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chat_id: TELEGRAM_CHAT_ID,
          text: message,
          parse_mode: 'HTML',
        }),
      }
    );

    if (!telegramResponse.ok) {
      const errorData = await telegramResponse.text();
      console.error('Telegram API error:', errorData);
      throw new Error('Failed to send to Telegram');
    }

    console.log('Production order sent to Telegram successfully');
    return NextResponse.json({ success: true, orderNumber: orderData.orderNumber });

  } catch (error) {
    console.error('Error processing production order:', error);
    return NextResponse.json(
      { error: 'Internal server error' },
      { status: 500 }
    );
  }
}
