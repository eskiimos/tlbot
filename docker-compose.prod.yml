version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: tlbot_postgres_prod
    restart: unless-stopped
    environment:
      POSTGRES_USER: tlbot
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: tlbot_prod
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "127.0.0.1:5432:5432"  # Только локальные подключения
    networks:
      - tlbot_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tlbot -d tlbot_prod"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  app:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: tlbot_app_prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    env_file:
      - .env.production
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "127.0.0.1:3000:3000"  # Только локальные подключения
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tlbot_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local

networks:
  tlbot_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
